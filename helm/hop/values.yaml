# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Default values for hop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# deploy hop-server
server:
  enabled: true

## @param replicaCount number of replicas for the statefulset
  replicaCount: 1

  ## @section Image
  ## @param image.name Image name
  ## @param image.pullPolicy Image pull policy
  ## @param image.tag Visit: [Image tag](https://hub.docker.com/r/apache/hop/tags?page=1&ordering=last_updated)
  ## @param image.env Environment variables
  image:
    name: docker.io/apache/hop
    pullPolicy: IfNotPresent
    # Overrides the image tag
    tag: "latest"
    env:
      # HOP_SERVER_METADATA_FOLDER: "/files/projects/my-project/metadata"
      # HOP_CONFIG_FOLDER: "/files/config"
      # HOP_ENVIRONMENT_NAME: "my-project-env"
      # HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS: "/files/projects/my-project/main-config.json,/files/projects/my-project/extra-config.json"
      # HOP_PROJECT_NAME: "my-project"
      # HOP_PROJECT_FOLDER: "/files/projects/my-project"

  ## @param imagePullSecrets Secret to use for pulling the image
  imagePullSecrets: [ ]

  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000

  ## @section Service
  service:
    http:
      type: ClusterIP
      port: 80
      targetPort: 8081
      name: http

  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  ingress:
    enabled: false
    # className: nginx
    className:
    annotations:
      # kubernetes.io/ingress.class: nginx
    path: /
    pathType: Prefix
    hosts:
      # - server.example.com
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - server.example.com
    # Mostly for argocd or any other CI that uses `helm template | kubectl apply` or similar
    # If helm doesn't correctly detect your ingress API version you can set it here.
    # apiVersion: networking.k8s.io/v1

  ## @section Autoscaling
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  ## @section Persistence
  #
  ## @param persistence.enabled Enable persistent storage
  ## @param persistence.existingClaim Use an existing claim to store repository information
  persistence:
    enabled: false
    existingClaim: my-claim

  ## @section Hop
  hop:
    port: 8081
    user: admin
  
## deploy hop-web
web:
  enabled: true

## @param replicaCount number of replicas for the statefulset
  replicaCount: 1
  image:
    name: docker.io/apache/hop-web
    pullPolicy: IfNotPresent
    # Overrides the image tag
    tag: "latest"

  imagePullSecrets: [ ]

  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: { }

  podSecurityContext: { }

  service:
    http:
      type: ClusterIP
      port: 8080
      targetPort: 8080
      name: http

  ingress:
    enabled: false
    # className: nginx
    className:
    annotations:
      # kubernetes.io/ingress.class: nginx
    path: /
    pathType: Prefix
    hosts:
      # - web.example.com
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - web.example.com
    # Mostly for argocd or any other CI that uses `helm template | kubectl apply` or similar
    # If helm doesn't correctly detect your ingress API version you can set it here.
    # apiVersion: networking.k8s.io/v1

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }